{"version":3,"sources":["db/mds sync /^/.//.*$","db/mds/live-receipt.md","assets/svgs/icons.js","components/navbar.js","components/social.js","components/hero.js","components/whatIdo.js","components/aboutMe.js","components/footer.js","components/projectCard.js","components/projects.js","screens/home.js","screens/projects.js","components/chip.js","screens/project.js","screens/about.js","components/scrollToTop.js","App.js","screens/notFound.js","serviceWorker.js","index.js","assets/images/hch.jpg","assets/images/hch-avatar.png","assets/images/not-found.png","assets/bg-video.mp4","assets/images sync /^/.//.*$","assets/images/hero-bg.png","assets/images/medical.png","assets/images/my-hero-img.png","assets/images/receipts.png","assets/images/retail-bg.jpg","assets/images/shopping.png"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Icons","RIGHT_ARROW","width","height","viewBox","fill","xmlns","d","HIMANSHU","maskUnits","x","y","stroke","strokeWidth","mask","CHANAN","LOGO","CODE","rx","x1","y1","x2","y2","BACKEND","MOBILE_APP","fillRule","clipRule","FE_CODE","LINKED_IN","FACEBOOK","INSTAGRAM","TWITTER","clipPath","GITHUB","MOBILE_MENU","CLOSE_ICON","NavigationBar","useState","isMobileMenuOpen","setIsMobileMenuOpen","hasScrolled","setHasScrolled","useEffect","window","addEventListener","handleScroll","removeEventListener","pageYOffset","className","to","onClick","SocialLinks","target","rel","href","Hero","namePaths","document","querySelectorAll","pathLengths","i","length","path","pathLength","getTotalLength","style","strokeDasharray","strokeDashoffset","animation","push","autoPlay","muted","loop","src","bgVideo","type","role","aria-label","WhatIdo","joiningDate","Date","yearsOfExp","getUTCFullYear","AboutMe","Footer","props","bgColor","backgroundColor","myPhoto","alt","ProjectCard","heading","imgName","tech","description","imgSrc","require","Projects","max","data","projectData","slice","project","key","slug","HomeScreen","projects","textDecoration","Chip","title","ProjectScreen","filename","mdFileModule","fetch","res","setMd","text","getMd","md","details","subHeading","stack","roles","name","source","renderers","root","React","Fragment","About","ScrollToTop","pathname","useLocation","scrollTo","routes","Component","routerProps","hash","location","substr","projectsDb","filter","notFoundImg","AppRoutes","render","TransitionGroup","CSSTransition","timeout","classNames","unmountOnExit","exact","App","component","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.98daae8d.chunk.js","sourcesContent":["var map = {\n\t\"./live-receipt.md\": 153\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 152;","module.exports = __webpack_public_path__ + \"static/media/live-receipt.fa569e6b.md\";","import React from 'react';\n\nconst Icons = {\n  RIGHT_ARROW: (<svg width=\"17\" height=\"17\" viewBox=\"0 0 17 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M15.536 7.38187L9.05366 0.987307C8.90777 0.835888 8.73265 0.714799 8.5386 0.631172C8.34454 0.547544 8.13549 0.50307 7.92375 0.500368C7.712 0.497665 7.50185 0.53679 7.30567 0.615438C7.10949 0.694085 6.93125 0.810665 6.78144 0.95831C6.63164 1.10595 6.5133 1.28168 6.4334 1.47513C6.3535 1.66859 6.31365 1.87586 6.31621 2.08473C6.31876 2.29361 6.36366 2.49987 6.44827 2.69137C6.53287 2.88287 6.65547 3.05572 6.80884 3.19976L10.6408 6.97395H1.23225C0.811318 6.97395 0.309218 7.61742 0.309218 7.61742C0.309218 7.61742 0.00154018 7.98456 0.00154018 8.52795C0.00154018 8.94318 0.0115743 9.32066 0.309218 9.61427C0.606861 9.90788 0.811318 10.0455 1.23225 10.0455L10.6053 10.1052L6.80884 13.8561C6.5236 14.1521 6.36694 14.5465 6.37229 14.9549C6.37765 15.3633 6.5446 15.7535 6.83751 16.0422C7.13043 16.3309 7.52612 16.4952 7.94015 16.5001C8.35418 16.505 8.75377 16.3502 9.05366 16.0685L15.536 9.67396C15.6839 9.52894 15.8012 9.35639 15.881 9.16633C15.9607 8.97627 16.0015 8.77247 16.0008 8.56677C16.0018 8.55384 16.0018 8.54085 16.0008 8.52792C16.0017 8.51498 16.0017 8.502 16.0008 8.48907C16.0006 8.07385 15.8335 7.67566 15.536 7.38187Z\" fill=\"#F26C4F\"/>\n  </svg>),\n  HIMANSHU: (<svg width=\"424\" height=\"79\" viewBox=\"0 0 424 79\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <mask id=\"path-1-outside-1\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"424\" height=\"79\" fill=\"black\">\n      <rect fill=\"white\" width=\"424\" height=\"79\"/>\n      <path d=\"M61.512 4.92V74.328H48.552V43.992H15.96V74.328H3V4.92H15.96V34.776H48.552V4.92H61.512Z\"/>\n      <path d=\"M86.7285 25.08V74.328H74.8245V25.08H86.7285ZM88.3605 10.728C88.3605 11.752 88.1525 12.712 87.7365 13.608C87.3205 14.504 86.7605 15.288 86.0565 15.96C85.3845 16.632 84.5845 17.176 83.6565 17.592C82.7285 17.976 81.7365 18.168 80.6805 18.168C79.6565 18.168 78.6805 17.976 77.7525 17.592C76.8565 17.176 76.0725 16.632 75.4005 15.96C74.7285 15.288 74.1845 14.504 73.7685 13.608C73.3845 12.712 73.1925 11.752 73.1925 10.728C73.1925 9.672 73.3845 8.68 73.7685 7.752C74.1845 6.824 74.7285 6.024 75.4005 5.352C76.0725 4.68 76.8565 4.152 77.7525 3.768C78.6805 3.352 79.6565 3.144 80.6805 3.144C81.7365 3.144 82.7285 3.352 83.6565 3.768C84.5845 4.152 85.3845 4.68 86.0565 5.352C86.7605 6.024 87.3205 6.824 87.7365 7.752C88.1525 8.68 88.3605 9.672 88.3605 10.728Z\"/>\n      <path d=\"M98.8155 74.328V25.08H106.064C107.6 25.08 108.607 25.8 109.087 27.24L109.855 30.888C110.719 29.928 111.616 29.048 112.544 28.248C113.504 27.448 114.512 26.76 115.568 26.184C116.656 25.608 117.807 25.16 119.023 24.84C120.271 24.488 121.632 24.312 123.104 24.312C126.208 24.312 128.752 25.16 130.736 26.856C132.752 28.52 134.255 30.744 135.247 33.528C136.015 31.896 136.976 30.504 138.128 29.352C139.28 28.168 140.544 27.208 141.92 26.472C143.296 25.736 144.752 25.192 146.288 24.84C147.856 24.488 149.424 24.312 150.992 24.312C153.712 24.312 156.128 24.728 158.24 25.56C160.352 26.392 162.128 27.608 163.568 29.208C165.008 30.808 166.096 32.76 166.832 35.064C167.6 37.368 167.984 40.008 167.984 42.984V74.328H156.128V42.984C156.128 39.848 155.44 37.496 154.064 35.928C152.688 34.328 150.672 33.528 148.016 33.528C146.8 33.528 145.664 33.736 144.608 34.152C143.584 34.568 142.672 35.176 141.872 35.976C141.104 36.744 140.496 37.72 140.048 38.904C139.6 40.088 139.376 41.448 139.376 42.984V74.328H127.472V42.984C127.472 39.688 126.8 37.288 125.456 35.784C124.144 34.28 122.208 33.528 119.648 33.528C117.92 33.528 116.304 33.96 114.799 34.824C113.327 35.656 111.951 36.808 110.671 38.28V74.328H98.8155Z\"/>\n      <path d=\"M205.269 53.304C201.845 53.464 198.965 53.768 196.629 54.216C194.293 54.632 192.421 55.176 191.013 55.848C189.605 56.52 188.597 57.304 187.989 58.2C187.381 59.096 187.077 60.072 187.077 61.128C187.077 63.208 187.685 64.696 188.901 65.592C190.149 66.488 191.765 66.936 193.749 66.936C196.181 66.936 198.277 66.504 200.037 65.64C201.829 64.744 203.573 63.4 205.269 61.608V53.304ZM178.101 31.944C183.765 26.76 190.581 24.168 198.549 24.168C201.429 24.168 204.005 24.648 206.277 25.608C208.549 26.536 210.469 27.848 212.037 29.544C213.605 31.208 214.789 33.208 215.589 35.544C216.421 37.88 216.837 40.44 216.837 43.224V74.328H211.461C210.341 74.328 209.477 74.168 208.869 73.848C208.261 73.496 207.781 72.808 207.429 71.784L206.373 68.232C205.125 69.352 203.909 70.344 202.725 71.208C201.541 72.04 200.309 72.744 199.029 73.32C197.749 73.896 196.373 74.328 194.901 74.616C193.461 74.936 191.861 75.096 190.101 75.096C188.021 75.096 186.101 74.824 184.341 74.28C182.581 73.704 181.061 72.856 179.781 71.736C178.501 70.616 177.509 69.224 176.805 67.56C176.101 65.896 175.749 63.96 175.749 61.752C175.749 60.504 175.957 59.272 176.373 58.056C176.789 56.808 177.461 55.624 178.389 54.504C179.349 53.384 180.581 52.328 182.085 51.336C183.589 50.344 185.429 49.48 187.605 48.744C189.813 48.008 192.373 47.416 195.285 46.968C198.197 46.488 201.525 46.2 205.269 46.104V43.224C205.269 39.928 204.565 37.496 203.157 35.928C201.749 34.328 199.717 33.528 197.061 33.528C195.141 33.528 193.541 33.752 192.261 34.2C191.013 34.648 189.909 35.16 188.949 35.736C187.989 36.28 187.109 36.776 186.309 37.224C185.541 37.672 184.677 37.896 183.717 37.896C182.885 37.896 182.181 37.688 181.605 37.272C181.029 36.824 180.565 36.312 180.213 35.736L178.101 31.944Z\"/>\n      <path d=\"M239.091 31.128C240.083 30.136 241.123 29.224 242.211 28.392C243.331 27.528 244.499 26.808 245.715 26.232C246.963 25.624 248.291 25.16 249.699 24.84C251.107 24.488 252.643 24.312 254.307 24.312C256.995 24.312 259.379 24.776 261.459 25.704C263.539 26.6 265.267 27.88 266.643 29.544C268.051 31.176 269.107 33.144 269.811 35.448C270.547 37.72 270.915 40.232 270.915 42.984V74.328H259.059V42.984C259.059 39.976 258.371 37.656 256.995 36.024C255.619 34.36 253.523 33.528 250.707 33.528C248.659 33.528 246.739 33.992 244.947 34.92C243.155 35.848 241.459 37.112 239.859 38.712V74.328H228.003V25.08H235.251C236.787 25.08 237.795 25.8 238.275 27.24L239.091 31.128Z\"/>\n      <path d=\"M312.238 34.68C311.918 35.192 311.582 35.56 311.23 35.784C310.878 35.976 310.431 36.072 309.887 36.072C309.311 36.072 308.686 35.912 308.014 35.592C307.374 35.272 306.623 34.92 305.759 34.536C304.895 34.12 303.903 33.752 302.783 33.432C301.695 33.112 300.399 32.952 298.895 32.952C296.559 32.952 294.719 33.448 293.375 34.44C292.063 35.432 291.406 36.728 291.406 38.328C291.406 39.384 291.742 40.28 292.414 41.016C293.118 41.72 294.031 42.344 295.151 42.888C296.303 43.432 297.599 43.928 299.039 44.376C300.479 44.792 301.934 45.256 303.406 45.768C304.91 46.28 306.383 46.872 307.823 47.544C309.263 48.184 310.543 49.016 311.663 50.04C312.815 51.032 313.726 52.232 314.398 53.64C315.102 55.048 315.454 56.744 315.454 58.728C315.454 61.096 315.023 63.288 314.159 65.304C313.327 67.288 312.079 69.016 310.415 70.488C308.751 71.928 306.687 73.064 304.223 73.896C301.791 74.696 298.975 75.096 295.775 75.096C294.079 75.096 292.415 74.936 290.783 74.616C289.183 74.328 287.63 73.912 286.126 73.368C284.654 72.824 283.279 72.184 281.999 71.448C280.751 70.712 279.646 69.912 278.686 69.048L281.423 64.536C281.775 63.992 282.191 63.576 282.671 63.288C283.151 63 283.759 62.856 284.495 62.856C285.231 62.856 285.919 63.064 286.559 63.48C287.231 63.896 287.999 64.344 288.863 64.824C289.727 65.304 290.735 65.752 291.887 66.168C293.071 66.584 294.558 66.792 296.35 66.792C297.758 66.792 298.959 66.632 299.951 66.312C300.975 65.96 301.807 65.512 302.447 64.968C303.119 64.424 303.599 63.8 303.887 63.096C304.207 62.36 304.367 61.608 304.367 60.84C304.367 59.688 304.015 58.744 303.311 58.008C302.639 57.272 301.726 56.632 300.574 56.088C299.454 55.544 298.158 55.064 296.686 54.648C295.246 54.2 293.759 53.72 292.223 53.208C290.719 52.696 289.231 52.104 287.759 51.432C286.319 50.728 285.023 49.848 283.871 48.792C282.751 47.736 281.838 46.44 281.134 44.904C280.462 43.368 280.126 41.512 280.126 39.336C280.126 37.32 280.527 35.4 281.327 33.576C282.127 31.752 283.295 30.168 284.831 28.824C286.399 27.448 288.334 26.36 290.638 25.56C292.974 24.728 295.663 24.312 298.703 24.312C302.095 24.312 305.182 24.872 307.966 25.992C310.75 27.112 313.071 28.584 314.927 30.408L312.238 34.68Z\"/>\n      <path d=\"M336.234 30.36C338.154 28.568 340.266 27.112 342.57 25.992C344.874 24.872 347.578 24.312 350.682 24.312C353.37 24.312 355.754 24.776 357.834 25.704C359.914 26.6 361.642 27.88 363.018 29.544C364.426 31.176 365.482 33.144 366.186 35.448C366.922 37.72 367.29 40.232 367.29 42.984V74.328H355.434V42.984C355.434 39.976 354.746 37.656 353.37 36.024C351.994 34.36 349.898 33.528 347.082 33.528C345.034 33.528 343.114 33.992 341.322 34.92C339.53 35.848 337.834 37.112 336.234 38.712V74.328H324.378V3H336.234V30.36Z\"/>\n      <path d=\"M420.997 25.08V74.328H413.75C412.182 74.328 411.189 73.608 410.773 72.168L409.957 68.232C407.941 70.28 405.717 71.944 403.285 73.224C400.853 74.472 397.99 75.096 394.694 75.096C392.006 75.096 389.622 74.648 387.542 73.752C385.494 72.824 383.766 71.528 382.358 69.864C380.95 68.2 379.878 66.232 379.142 63.96C378.438 61.656 378.086 59.128 378.086 56.376V25.08H389.941V56.376C389.941 59.384 390.629 61.72 392.005 63.384C393.413 65.016 395.51 65.832 398.294 65.832C400.342 65.832 402.261 65.384 404.053 64.488C405.845 63.56 407.542 62.296 409.142 60.696V25.08H420.997Z\"/>\n    </mask>\n    <path d=\"M61.512 4.92V74.328H48.552V43.992H15.96V74.328H3V4.92H15.96V34.776H48.552V4.92H61.512Z\" stroke=\"white\" strokeWidth=\"3\" mask=\"url(#path-1-outside-1)\"/>\n    <path d=\"M86.7285 25.08V74.328H74.8245V25.08H86.7285ZM88.3605 10.728C88.3605 11.752 88.1525 12.712 87.7365 13.608C87.3205 14.504 86.7605 15.288 86.0565 15.96C85.3845 16.632 84.5845 17.176 83.6565 17.592C82.7285 17.976 81.7365 18.168 80.6805 18.168C79.6565 18.168 78.6805 17.976 77.7525 17.592C76.8565 17.176 76.0725 16.632 75.4005 15.96C74.7285 15.288 74.1845 14.504 73.7685 13.608C73.3845 12.712 73.1925 11.752 73.1925 10.728C73.1925 9.672 73.3845 8.68 73.7685 7.752C74.1845 6.824 74.7285 6.024 75.4005 5.352C76.0725 4.68 76.8565 4.152 77.7525 3.768C78.6805 3.352 79.6565 3.144 80.6805 3.144C81.7365 3.144 82.7285 3.352 83.6565 3.768C84.5845 4.152 85.3845 4.68 86.0565 5.352C86.7605 6.024 87.3205 6.824 87.7365 7.752C88.1525 8.68 88.3605 9.672 88.3605 10.728Z\" stroke=\"white\" strokeWidth=\"3\" mask=\"url(#path-1-outside-1)\"/>\n    <path d=\"M98.8155 74.328V25.08H106.064C107.6 25.08 108.607 25.8 109.087 27.24L109.855 30.888C110.719 29.928 111.616 29.048 112.544 28.248C113.504 27.448 114.512 26.76 115.568 26.184C116.656 25.608 117.807 25.16 119.023 24.84C120.271 24.488 121.632 24.312 123.104 24.312C126.208 24.312 128.752 25.16 130.736 26.856C132.752 28.52 134.255 30.744 135.247 33.528C136.015 31.896 136.976 30.504 138.128 29.352C139.28 28.168 140.544 27.208 141.92 26.472C143.296 25.736 144.752 25.192 146.288 24.84C147.856 24.488 149.424 24.312 150.992 24.312C153.712 24.312 156.128 24.728 158.24 25.56C160.352 26.392 162.128 27.608 163.568 29.208C165.008 30.808 166.096 32.76 166.832 35.064C167.6 37.368 167.984 40.008 167.984 42.984V74.328H156.128V42.984C156.128 39.848 155.44 37.496 154.064 35.928C152.688 34.328 150.672 33.528 148.016 33.528C146.8 33.528 145.664 33.736 144.608 34.152C143.584 34.568 142.672 35.176 141.872 35.976C141.104 36.744 140.496 37.72 140.048 38.904C139.6 40.088 139.376 41.448 139.376 42.984V74.328H127.472V42.984C127.472 39.688 126.8 37.288 125.456 35.784C124.144 34.28 122.208 33.528 119.648 33.528C117.92 33.528 116.304 33.96 114.799 34.824C113.327 35.656 111.951 36.808 110.671 38.28V74.328H98.8155Z\" stroke=\"white\" strokeWidth=\"3\" mask=\"url(#path-1-outside-1)\"/>\n    <path d=\"M205.269 53.304C201.845 53.464 198.965 53.768 196.629 54.216C194.293 54.632 192.421 55.176 191.013 55.848C189.605 56.52 188.597 57.304 187.989 58.2C187.381 59.096 187.077 60.072 187.077 61.128C187.077 63.208 187.685 64.696 188.901 65.592C190.149 66.488 191.765 66.936 193.749 66.936C196.181 66.936 198.277 66.504 200.037 65.64C201.829 64.744 203.573 63.4 205.269 61.608V53.304ZM178.101 31.944C183.765 26.76 190.581 24.168 198.549 24.168C201.429 24.168 204.005 24.648 206.277 25.608C208.549 26.536 210.469 27.848 212.037 29.544C213.605 31.208 214.789 33.208 215.589 35.544C216.421 37.88 216.837 40.44 216.837 43.224V74.328H211.461C210.341 74.328 209.477 74.168 208.869 73.848C208.261 73.496 207.781 72.808 207.429 71.784L206.373 68.232C205.125 69.352 203.909 70.344 202.725 71.208C201.541 72.04 200.309 72.744 199.029 73.32C197.749 73.896 196.373 74.328 194.901 74.616C193.461 74.936 191.861 75.096 190.101 75.096C188.021 75.096 186.101 74.824 184.341 74.28C182.581 73.704 181.061 72.856 179.781 71.736C178.501 70.616 177.509 69.224 176.805 67.56C176.101 65.896 175.749 63.96 175.749 61.752C175.749 60.504 175.957 59.272 176.373 58.056C176.789 56.808 177.461 55.624 178.389 54.504C179.349 53.384 180.581 52.328 182.085 51.336C183.589 50.344 185.429 49.48 187.605 48.744C189.813 48.008 192.373 47.416 195.285 46.968C198.197 46.488 201.525 46.2 205.269 46.104V43.224C205.269 39.928 204.565 37.496 203.157 35.928C201.749 34.328 199.717 33.528 197.061 33.528C195.141 33.528 193.541 33.752 192.261 34.2C191.013 34.648 189.909 35.16 188.949 35.736C187.989 36.28 187.109 36.776 186.309 37.224C185.541 37.672 184.677 37.896 183.717 37.896C182.885 37.896 182.181 37.688 181.605 37.272C181.029 36.824 180.565 36.312 180.213 35.736L178.101 31.944Z\" stroke=\"white\" strokeWidth=\"3\" mask=\"url(#path-1-outside-1)\"/>\n    <path d=\"M239.091 31.128C240.083 30.136 241.123 29.224 242.211 28.392C243.331 27.528 244.499 26.808 245.715 26.232C246.963 25.624 248.291 25.16 249.699 24.84C251.107 24.488 252.643 24.312 254.307 24.312C256.995 24.312 259.379 24.776 261.459 25.704C263.539 26.6 265.267 27.88 266.643 29.544C268.051 31.176 269.107 33.144 269.811 35.448C270.547 37.72 270.915 40.232 270.915 42.984V74.328H259.059V42.984C259.059 39.976 258.371 37.656 256.995 36.024C255.619 34.36 253.523 33.528 250.707 33.528C248.659 33.528 246.739 33.992 244.947 34.92C243.155 35.848 241.459 37.112 239.859 38.712V74.328H228.003V25.08H235.251C236.787 25.08 237.795 25.8 238.275 27.24L239.091 31.128Z\" stroke=\"white\" strokeWidth=\"3\" mask=\"url(#path-1-outside-1)\"/>\n    <path d=\"M312.238 34.68C311.918 35.192 311.582 35.56 311.23 35.784C310.878 35.976 310.431 36.072 309.887 36.072C309.311 36.072 308.686 35.912 308.014 35.592C307.374 35.272 306.623 34.92 305.759 34.536C304.895 34.12 303.903 33.752 302.783 33.432C301.695 33.112 300.399 32.952 298.895 32.952C296.559 32.952 294.719 33.448 293.375 34.44C292.063 35.432 291.406 36.728 291.406 38.328C291.406 39.384 291.742 40.28 292.414 41.016C293.118 41.72 294.031 42.344 295.151 42.888C296.303 43.432 297.599 43.928 299.039 44.376C300.479 44.792 301.934 45.256 303.406 45.768C304.91 46.28 306.383 46.872 307.823 47.544C309.263 48.184 310.543 49.016 311.663 50.04C312.815 51.032 313.726 52.232 314.398 53.64C315.102 55.048 315.454 56.744 315.454 58.728C315.454 61.096 315.023 63.288 314.159 65.304C313.327 67.288 312.079 69.016 310.415 70.488C308.751 71.928 306.687 73.064 304.223 73.896C301.791 74.696 298.975 75.096 295.775 75.096C294.079 75.096 292.415 74.936 290.783 74.616C289.183 74.328 287.63 73.912 286.126 73.368C284.654 72.824 283.279 72.184 281.999 71.448C280.751 70.712 279.646 69.912 278.686 69.048L281.423 64.536C281.775 63.992 282.191 63.576 282.671 63.288C283.151 63 283.759 62.856 284.495 62.856C285.231 62.856 285.919 63.064 286.559 63.48C287.231 63.896 287.999 64.344 288.863 64.824C289.727 65.304 290.735 65.752 291.887 66.168C293.071 66.584 294.558 66.792 296.35 66.792C297.758 66.792 298.959 66.632 299.951 66.312C300.975 65.96 301.807 65.512 302.447 64.968C303.119 64.424 303.599 63.8 303.887 63.096C304.207 62.36 304.367 61.608 304.367 60.84C304.367 59.688 304.015 58.744 303.311 58.008C302.639 57.272 301.726 56.632 300.574 56.088C299.454 55.544 298.158 55.064 296.686 54.648C295.246 54.2 293.759 53.72 292.223 53.208C290.719 52.696 289.231 52.104 287.759 51.432C286.319 50.728 285.023 49.848 283.871 48.792C282.751 47.736 281.838 46.44 281.134 44.904C280.462 43.368 280.126 41.512 280.126 39.336C280.126 37.32 280.527 35.4 281.327 33.576C282.127 31.752 283.295 30.168 284.831 28.824C286.399 27.448 288.334 26.36 290.638 25.56C292.974 24.728 295.663 24.312 298.703 24.312C302.095 24.312 305.182 24.872 307.966 25.992C310.75 27.112 313.071 28.584 314.927 30.408L312.238 34.68Z\" stroke=\"white\" strokeWidth=\"3\" mask=\"url(#path-1-outside-1)\"/>\n    <path d=\"M336.234 30.36C338.154 28.568 340.266 27.112 342.57 25.992C344.874 24.872 347.578 24.312 350.682 24.312C353.37 24.312 355.754 24.776 357.834 25.704C359.914 26.6 361.642 27.88 363.018 29.544C364.426 31.176 365.482 33.144 366.186 35.448C366.922 37.72 367.29 40.232 367.29 42.984V74.328H355.434V42.984C355.434 39.976 354.746 37.656 353.37 36.024C351.994 34.36 349.898 33.528 347.082 33.528C345.034 33.528 343.114 33.992 341.322 34.92C339.53 35.848 337.834 37.112 336.234 38.712V74.328H324.378V3H336.234V30.36Z\" stroke=\"white\" strokeWidth=\"3\" mask=\"url(#path-1-outside-1)\"/>\n    <path d=\"M420.997 25.08V74.328H413.75C412.182 74.328 411.189 73.608 410.773 72.168L409.957 68.232C407.941 70.28 405.717 71.944 403.285 73.224C400.853 74.472 397.99 75.096 394.694 75.096C392.006 75.096 389.622 74.648 387.542 73.752C385.494 72.824 383.766 71.528 382.358 69.864C380.95 68.2 379.878 66.232 379.142 63.96C378.438 61.656 378.086 59.128 378.086 56.376V25.08H389.941V56.376C389.941 59.384 390.629 61.72 392.005 63.384C393.413 65.016 395.51 65.832 398.294 65.832C400.342 65.832 402.261 65.384 404.053 64.488C405.845 63.56 407.542 62.296 409.142 60.696V25.08H420.997Z\" stroke=\"white\" strokeWidth=\"3\" mask=\"url(#path-1-outside-1)\"/>\n  </svg>),\n  CHANAN: (<svg width=\"322\" height=\"79\" viewBox=\"0 0 322 79\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <mask id=\"path-2-outside-2\" maskUnits=\"userSpaceOnUse\" x=\"0.695999\" y=\"0.671875\" width=\"321\" height=\"79\" fill=\"black\">\n      <rect fill=\"white\" x=\"0.695999\" y=\"0.671875\" width=\"321\" height=\"79\" />\n      <path d=\"M55.392 58.6319C56.096 58.6319 56.72 58.9039 57.264 59.4479L62.352 64.9679C59.536 68.4559 56.064 71.1279 51.936 72.9839C47.84 74.8399 42.912 75.7679 37.152 75.7679C32 75.7679 27.36 74.8879 23.232 73.1279C19.136 71.3679 15.632 68.9199 12.72 65.7839C9.808 62.6479 7.568 58.9039 6 54.5519C4.464 50.1999 3.696 45.4479 3.696 40.2959C3.696 35.0799 4.528 30.3119 6.192 25.9919C7.856 21.6399 10.192 17.8959 13.2 14.7599C16.24 11.6239 19.856 9.19188 24.048 7.46387C28.24 5.70388 32.88 4.82388 37.968 4.82388C43.024 4.82388 47.504 5.65588 51.408 7.31987C55.344 8.98388 58.688 11.1599 61.44 13.8479L57.12 19.8479C56.864 20.2319 56.528 20.5679 56.112 20.8559C55.728 21.1439 55.184 21.2879 54.48 21.2879C54 21.2879 53.504 21.1599 52.992 20.9039C52.48 20.6159 51.92 20.2799 51.312 19.8959C50.704 19.4799 50 19.0319 49.2 18.5519C48.4 18.0719 47.472 17.6399 46.416 17.2559C45.36 16.8399 44.128 16.5039 42.72 16.2479C41.344 15.9599 39.744 15.8159 37.92 15.8159C34.816 15.8159 31.968 16.3759 29.376 17.4959C26.816 18.5839 24.608 20.1839 22.752 22.2959C20.896 24.3759 19.456 26.9359 18.432 29.9759C17.408 32.9839 16.896 36.4239 16.896 40.2959C16.896 44.1999 17.44 47.6719 18.528 50.7119C19.648 53.7519 21.152 56.3119 23.04 58.3919C24.928 60.4719 27.152 62.0719 29.712 63.1919C32.272 64.2799 35.024 64.8239 37.968 64.8239C39.728 64.8239 41.312 64.7279 42.72 64.5359C44.16 64.3439 45.472 64.0399 46.656 63.6239C47.872 63.2079 49.008 62.6799 50.064 62.0399C51.152 61.3679 52.224 60.5519 53.28 59.5919C53.6 59.3039 53.936 59.0799 54.288 58.9199C54.64 58.7279 55.008 58.6319 55.392 58.6319Z\" />\n      <path d=\"M81.1807 31.0319C83.1007 29.2399 85.2128 27.7839 87.5168 26.6639C89.8208 25.5439 92.5248 24.9839 95.6288 24.9839C98.3168 24.9839 100.701 25.4479 102.781 26.3759C104.861 27.2719 106.589 28.5519 107.965 30.2159C109.373 31.8479 110.429 33.8159 111.133 36.1199C111.869 38.3919 112.237 40.9039 112.237 43.6559V74.9999H100.381V43.6559C100.381 40.6479 99.6928 38.3279 98.3167 36.6959C96.9408 35.0319 94.8447 34.1999 92.0287 34.1999C89.9807 34.1999 88.0608 34.6639 86.2688 35.5919C84.4768 36.5199 82.7807 37.7839 81.1807 39.3839V74.9999H69.3248V3.67188H81.1807V31.0319Z\" />\n      <path d=\"M149.528 53.9759C146.104 54.1359 143.224 54.4399 140.888 54.8879C138.552 55.3039 136.68 55.8479 135.272 56.5199C133.864 57.1919 132.856 57.9759 132.248 58.8719C131.64 59.7679 131.336 60.7439 131.336 61.7999C131.336 63.8799 131.944 65.3679 133.16 66.2639C134.408 67.1599 136.024 67.6079 138.008 67.6079C140.44 67.6079 142.536 67.1759 144.296 66.3119C146.088 65.4159 147.832 64.0719 149.528 62.2799V53.9759ZM122.36 32.6159C128.024 27.4319 134.84 24.8399 142.808 24.8399C145.688 24.8399 148.264 25.3199 150.536 26.2799C152.808 27.2079 154.728 28.5199 156.296 30.2159C157.864 31.8799 159.048 33.8799 159.848 36.2159C160.68 38.5519 161.096 41.1119 161.096 43.8959V74.9999H155.72C154.6 74.9999 153.736 74.8399 153.128 74.5199C152.52 74.1679 152.04 73.4799 151.688 72.4559L150.632 68.9039C149.384 70.0239 148.168 71.0159 146.984 71.8799C145.8 72.7119 144.568 73.4159 143.288 73.9919C142.008 74.5679 140.632 74.9999 139.16 75.2879C137.72 75.6079 136.12 75.7679 134.36 75.7679C132.28 75.7679 130.36 75.4959 128.6 74.9519C126.84 74.3759 125.32 73.5279 124.04 72.4079C122.76 71.2879 121.768 69.8959 121.064 68.2319C120.36 66.5679 120.008 64.6319 120.008 62.4239C120.008 61.1759 120.216 59.9439 120.632 58.7279C121.048 57.4799 121.72 56.2959 122.648 55.1759C123.608 54.0559 124.84 52.9999 126.344 52.0079C127.848 51.0159 129.688 50.1519 131.864 49.4159C134.072 48.6799 136.632 48.0879 139.544 47.6399C142.456 47.1599 145.784 46.8719 149.528 46.7759V43.8959C149.528 40.5999 148.824 38.1679 147.416 36.5999C146.008 34.9999 143.976 34.1999 141.32 34.1999C139.4 34.1999 137.8 34.4239 136.52 34.8719C135.272 35.3199 134.168 35.8319 133.208 36.4079C132.248 36.9519 131.368 37.4479 130.568 37.8959C129.8 38.3439 128.936 38.5679 127.976 38.5679C127.144 38.5679 126.44 38.3599 125.864 37.9439C125.288 37.4959 124.824 36.9839 124.472 36.4079L122.36 32.6159Z\" />\n      <path d=\"M183.35 31.7999C184.342 30.8079 185.382 29.8959 186.47 29.0639C187.59 28.1999 188.758 27.4799 189.974 26.9039C191.222 26.2959 192.55 25.8319 193.958 25.5119C195.366 25.1599 196.902 24.9839 198.566 24.9839C201.254 24.9839 203.638 25.4479 205.718 26.3759C207.798 27.2719 209.526 28.5519 210.902 30.2159C212.31 31.8479 213.366 33.8159 214.07 36.1199C214.806 38.3919 215.174 40.9039 215.174 43.6559V74.9999H203.318V43.6559C203.318 40.6479 202.63 38.3279 201.254 36.6959C199.878 35.0319 197.782 34.1999 194.966 34.1999C192.918 34.1999 190.998 34.6639 189.206 35.5919C187.414 36.5199 185.718 37.7839 184.118 39.3839V74.9999H172.262V25.7519H179.51C181.046 25.7519 182.054 26.4719 182.534 27.9119L183.35 31.7999Z\" />\n      <path d=\"M252.466 53.9759C249.042 54.1359 246.162 54.4399 243.826 54.8879C241.49 55.3039 239.618 55.8479 238.21 56.5199C236.802 57.1919 235.794 57.9759 235.186 58.8719C234.578 59.7679 234.274 60.7439 234.274 61.7999C234.274 63.8799 234.882 65.3679 236.098 66.2639C237.346 67.1599 238.962 67.6079 240.946 67.6079C243.378 67.6079 245.474 67.1759 247.234 66.3119C249.026 65.4159 250.77 64.0719 252.466 62.2799V53.9759ZM225.298 32.6159C230.962 27.4319 237.778 24.8399 245.746 24.8399C248.626 24.8399 251.202 25.3199 253.474 26.2799C255.746 27.2079 257.666 28.5199 259.234 30.2159C260.802 31.8799 261.986 33.8799 262.786 36.2159C263.618 38.5519 264.034 41.1119 264.034 43.8959V74.9999H258.658C257.538 74.9999 256.674 74.8399 256.066 74.5199C255.458 74.1679 254.978 73.4799 254.626 72.4559L253.57 68.9039C252.322 70.0239 251.106 71.0159 249.922 71.8799C248.738 72.7119 247.506 73.4159 246.226 73.9919C244.946 74.5679 243.57 74.9999 242.098 75.2879C240.658 75.6079 239.058 75.7679 237.298 75.7679C235.218 75.7679 233.298 75.4959 231.538 74.9519C229.778 74.3759 228.258 73.5279 226.978 72.4079C225.698 71.2879 224.706 69.8959 224.002 68.2319C223.298 66.5679 222.946 64.6319 222.946 62.4239C222.946 61.1759 223.154 59.9439 223.57 58.7279C223.986 57.4799 224.658 56.2959 225.586 55.1759C226.546 54.0559 227.778 52.9999 229.282 52.0079C230.786 51.0159 232.626 50.1519 234.802 49.4159C237.01 48.6799 239.57 48.0879 242.482 47.6399C245.394 47.1599 248.722 46.8719 252.466 46.7759V43.8959C252.466 40.5999 251.762 38.1679 250.354 36.5999C248.946 34.9999 246.914 34.1999 244.258 34.1999C242.338 34.1999 240.738 34.4239 239.458 34.8719C238.21 35.3199 237.106 35.8319 236.146 36.4079C235.186 36.9519 234.306 37.4479 233.506 37.8959C232.738 38.3439 231.874 38.5679 230.914 38.5679C230.082 38.5679 229.378 38.3599 228.802 37.9439C228.226 37.4959 227.762 36.9839 227.41 36.4079L225.298 32.6159Z\" />\n      <path d=\"M286.288 31.7999C287.28 30.8079 288.32 29.8959 289.408 29.0639C290.528 28.1999 291.696 27.4799 292.912 26.9039C294.16 26.2959 295.488 25.8319 296.896 25.5119C298.304 25.1599 299.84 24.9839 301.504 24.9839C304.192 24.9839 306.576 25.4479 308.656 26.3759C310.736 27.2719 312.464 28.5519 313.84 30.2159C315.248 31.8479 316.304 33.8159 317.008 36.1199C317.744 38.3919 318.112 40.9039 318.112 43.6559V74.9999H306.256V43.6559C306.256 40.6479 305.568 38.3279 304.192 36.6959C302.816 35.0319 300.72 34.1999 297.904 34.1999C295.856 34.1999 293.936 34.6639 292.144 35.5919C290.352 36.5199 288.656 37.7839 287.056 39.3839V74.9999H275.2V25.7519H282.448C283.984 25.7519 284.992 26.4719 285.472 27.9119L286.288 31.7999Z\" />\n    </mask>\n    <path d=\"M55.392 58.6319C56.096 58.6319 56.72 58.9039 57.264 59.4479L62.352 64.9679C59.536 68.4559 56.064 71.1279 51.936 72.9839C47.84 74.8399 42.912 75.7679 37.152 75.7679C32 75.7679 27.36 74.8879 23.232 73.1279C19.136 71.3679 15.632 68.9199 12.72 65.7839C9.808 62.6479 7.568 58.9039 6 54.5519C4.464 50.1999 3.696 45.4479 3.696 40.2959C3.696 35.0799 4.528 30.3119 6.192 25.9919C7.856 21.6399 10.192 17.8959 13.2 14.7599C16.24 11.6239 19.856 9.19188 24.048 7.46387C28.24 5.70388 32.88 4.82388 37.968 4.82388C43.024 4.82388 47.504 5.65588 51.408 7.31987C55.344 8.98388 58.688 11.1599 61.44 13.8479L57.12 19.8479C56.864 20.2319 56.528 20.5679 56.112 20.8559C55.728 21.1439 55.184 21.2879 54.48 21.2879C54 21.2879 53.504 21.1599 52.992 20.9039C52.48 20.6159 51.92 20.2799 51.312 19.8959C50.704 19.4799 50 19.0319 49.2 18.5519C48.4 18.0719 47.472 17.6399 46.416 17.2559C45.36 16.8399 44.128 16.5039 42.72 16.2479C41.344 15.9599 39.744 15.8159 37.92 15.8159C34.816 15.8159 31.968 16.3759 29.376 17.4959C26.816 18.5839 24.608 20.1839 22.752 22.2959C20.896 24.3759 19.456 26.9359 18.432 29.9759C17.408 32.9839 16.896 36.4239 16.896 40.2959C16.896 44.1999 17.44 47.6719 18.528 50.7119C19.648 53.7519 21.152 56.3119 23.04 58.3919C24.928 60.4719 27.152 62.0719 29.712 63.1919C32.272 64.2799 35.024 64.8239 37.968 64.8239C39.728 64.8239 41.312 64.7279 42.72 64.5359C44.16 64.3439 45.472 64.0399 46.656 63.6239C47.872 63.2079 49.008 62.6799 50.064 62.0399C51.152 61.3679 52.224 60.5519 53.28 59.5919C53.6 59.3039 53.936 59.0799 54.288 58.9199C54.64 58.7279 55.008 58.6319 55.392 58.6319Z\" stroke=\"white\" strokeWidth=\"3\" mask=\"url(#path-2-outside-2)\" />\n    <path d=\"M81.1807 31.0319C83.1007 29.2399 85.2128 27.7839 87.5168 26.6639C89.8208 25.5439 92.5248 24.9839 95.6288 24.9839C98.3168 24.9839 100.701 25.4479 102.781 26.3759C104.861 27.2719 106.589 28.5519 107.965 30.2159C109.373 31.8479 110.429 33.8159 111.133 36.1199C111.869 38.3919 112.237 40.9039 112.237 43.6559V74.9999H100.381V43.6559C100.381 40.6479 99.6928 38.3279 98.3167 36.6959C96.9408 35.0319 94.8447 34.1999 92.0287 34.1999C89.9807 34.1999 88.0608 34.6639 86.2688 35.5919C84.4768 36.5199 82.7807 37.7839 81.1807 39.3839V74.9999H69.3248V3.67188H81.1807V31.0319Z\" stroke=\"white\" strokeWidth=\"3\" mask=\"url(#path-2-outside-2)\" />\n    <path d=\"M149.528 53.9759C146.104 54.1359 143.224 54.4399 140.888 54.8879C138.552 55.3039 136.68 55.8479 135.272 56.5199C133.864 57.1919 132.856 57.9759 132.248 58.8719C131.64 59.7679 131.336 60.7439 131.336 61.7999C131.336 63.8799 131.944 65.3679 133.16 66.2639C134.408 67.1599 136.024 67.6079 138.008 67.6079C140.44 67.6079 142.536 67.1759 144.296 66.3119C146.088 65.4159 147.832 64.0719 149.528 62.2799V53.9759ZM122.36 32.6159C128.024 27.4319 134.84 24.8399 142.808 24.8399C145.688 24.8399 148.264 25.3199 150.536 26.2799C152.808 27.2079 154.728 28.5199 156.296 30.2159C157.864 31.8799 159.048 33.8799 159.848 36.2159C160.68 38.5519 161.096 41.1119 161.096 43.8959V74.9999H155.72C154.6 74.9999 153.736 74.8399 153.128 74.5199C152.52 74.1679 152.04 73.4799 151.688 72.4559L150.632 68.9039C149.384 70.0239 148.168 71.0159 146.984 71.8799C145.8 72.7119 144.568 73.4159 143.288 73.9919C142.008 74.5679 140.632 74.9999 139.16 75.2879C137.72 75.6079 136.12 75.7679 134.36 75.7679C132.28 75.7679 130.36 75.4959 128.6 74.9519C126.84 74.3759 125.32 73.5279 124.04 72.4079C122.76 71.2879 121.768 69.8959 121.064 68.2319C120.36 66.5679 120.008 64.6319 120.008 62.4239C120.008 61.1759 120.216 59.9439 120.632 58.7279C121.048 57.4799 121.72 56.2959 122.648 55.1759C123.608 54.0559 124.84 52.9999 126.344 52.0079C127.848 51.0159 129.688 50.1519 131.864 49.4159C134.072 48.6799 136.632 48.0879 139.544 47.6399C142.456 47.1599 145.784 46.8719 149.528 46.7759V43.8959C149.528 40.5999 148.824 38.1679 147.416 36.5999C146.008 34.9999 143.976 34.1999 141.32 34.1999C139.4 34.1999 137.8 34.4239 136.52 34.8719C135.272 35.3199 134.168 35.8319 133.208 36.4079C132.248 36.9519 131.368 37.4479 130.568 37.8959C129.8 38.3439 128.936 38.5679 127.976 38.5679C127.144 38.5679 126.44 38.3599 125.864 37.9439C125.288 37.4959 124.824 36.9839 124.472 36.4079L122.36 32.6159Z\" stroke=\"white\" strokeWidth=\"3\" mask=\"url(#path-2-outside-2)\" />\n    <path d=\"M183.35 31.7999C184.342 30.8079 185.382 29.8959 186.47 29.0639C187.59 28.1999 188.758 27.4799 189.974 26.9039C191.222 26.2959 192.55 25.8319 193.958 25.5119C195.366 25.1599 196.902 24.9839 198.566 24.9839C201.254 24.9839 203.638 25.4479 205.718 26.3759C207.798 27.2719 209.526 28.5519 210.902 30.2159C212.31 31.8479 213.366 33.8159 214.07 36.1199C214.806 38.3919 215.174 40.9039 215.174 43.6559V74.9999H203.318V43.6559C203.318 40.6479 202.63 38.3279 201.254 36.6959C199.878 35.0319 197.782 34.1999 194.966 34.1999C192.918 34.1999 190.998 34.6639 189.206 35.5919C187.414 36.5199 185.718 37.7839 184.118 39.3839V74.9999H172.262V25.7519H179.51C181.046 25.7519 182.054 26.4719 182.534 27.9119L183.35 31.7999Z\" stroke=\"white\" strokeWidth=\"3\" mask=\"url(#path-2-outside-2)\" />\n    <path d=\"M252.466 53.9759C249.042 54.1359 246.162 54.4399 243.826 54.8879C241.49 55.3039 239.618 55.8479 238.21 56.5199C236.802 57.1919 235.794 57.9759 235.186 58.8719C234.578 59.7679 234.274 60.7439 234.274 61.7999C234.274 63.8799 234.882 65.3679 236.098 66.2639C237.346 67.1599 238.962 67.6079 240.946 67.6079C243.378 67.6079 245.474 67.1759 247.234 66.3119C249.026 65.4159 250.77 64.0719 252.466 62.2799V53.9759ZM225.298 32.6159C230.962 27.4319 237.778 24.8399 245.746 24.8399C248.626 24.8399 251.202 25.3199 253.474 26.2799C255.746 27.2079 257.666 28.5199 259.234 30.2159C260.802 31.8799 261.986 33.8799 262.786 36.2159C263.618 38.5519 264.034 41.1119 264.034 43.8959V74.9999H258.658C257.538 74.9999 256.674 74.8399 256.066 74.5199C255.458 74.1679 254.978 73.4799 254.626 72.4559L253.57 68.9039C252.322 70.0239 251.106 71.0159 249.922 71.8799C248.738 72.7119 247.506 73.4159 246.226 73.9919C244.946 74.5679 243.57 74.9999 242.098 75.2879C240.658 75.6079 239.058 75.7679 237.298 75.7679C235.218 75.7679 233.298 75.4959 231.538 74.9519C229.778 74.3759 228.258 73.5279 226.978 72.4079C225.698 71.2879 224.706 69.8959 224.002 68.2319C223.298 66.5679 222.946 64.6319 222.946 62.4239C222.946 61.1759 223.154 59.9439 223.57 58.7279C223.986 57.4799 224.658 56.2959 225.586 55.1759C226.546 54.0559 227.778 52.9999 229.282 52.0079C230.786 51.0159 232.626 50.1519 234.802 49.4159C237.01 48.6799 239.57 48.0879 242.482 47.6399C245.394 47.1599 248.722 46.8719 252.466 46.7759V43.8959C252.466 40.5999 251.762 38.1679 250.354 36.5999C248.946 34.9999 246.914 34.1999 244.258 34.1999C242.338 34.1999 240.738 34.4239 239.458 34.8719C238.21 35.3199 237.106 35.8319 236.146 36.4079C235.186 36.9519 234.306 37.4479 233.506 37.8959C232.738 38.3439 231.874 38.5679 230.914 38.5679C230.082 38.5679 229.378 38.3599 228.802 37.9439C228.226 37.4959 227.762 36.9839 227.41 36.4079L225.298 32.6159Z\" stroke=\"white\" strokeWidth=\"3\" mask=\"url(#path-2-outside-2)\" />\n    <path d=\"M286.288 31.7999C287.28 30.8079 288.32 29.8959 289.408 29.0639C290.528 28.1999 291.696 27.4799 292.912 26.9039C294.16 26.2959 295.488 25.8319 296.896 25.5119C298.304 25.1599 299.84 24.9839 301.504 24.9839C304.192 24.9839 306.576 25.4479 308.656 26.3759C310.736 27.2719 312.464 28.5519 313.84 30.2159C315.248 31.8479 316.304 33.8159 317.008 36.1199C317.744 38.3919 318.112 40.9039 318.112 43.6559V74.9999H306.256V43.6559C306.256 40.6479 305.568 38.3279 304.192 36.6959C302.816 35.0319 300.72 34.1999 297.904 34.1999C295.856 34.1999 293.936 34.6639 292.144 35.5919C290.352 36.5199 288.656 37.7839 287.056 39.3839V74.9999H275.2V25.7519H282.448C283.984 25.7519 284.992 26.4719 285.472 27.9119L286.288 31.7999Z\" stroke=\"white\" strokeWidth=\"3\" mask=\"url(#path-2-outside-2)\" />\n  </svg>),\n  LOGO: (<svg width=\"50\" height=\"50\" viewBox=\"0 0 50 50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1 12.9217L24.5932 1L32.3371 5.01739L25.0452 9.11304L32.7589 12.9217M1 12.9217L8.80414 17.0957M1 12.9217V36.9217L8.80414 40.7043M8.80414 17.0957L16.5179 12.9217M8.80414 17.0957V24.8435M16.5179 12.9217L24.5932 17.0957L16.5179 21.0348M16.5179 12.9217V21.0348M16.5179 21.0348L24.5932 24.8435M16.5179 21.0348L8.80414 24.8435M16.5179 21.0348V28.5739L8.80414 24.8435M24.5932 24.8435L48.4576 12.9217M24.5932 24.8435V49M48.4576 12.9217L40.8343 9.11304L32.7589 12.9217M48.4576 12.9217L49 36.9217L40.8343 40.7043M32.7589 12.9217V5.01739M8.80414 40.7043V33.2696L17.1507 36.9217M8.80414 40.7043L17.1507 36.9217M17.1507 36.9217V45.4261L24.5932 49M24.5932 49L32.7589 45.113V36.9217V36.8435M40.8343 40.7043V33.2696L32.7589 36.8435M40.8343 40.7043L32.7589 36.8435M40.8343 25.287L32.7589 29.0174V21.3478L40.8343 25.287ZM40.8343 25.287V17.0957\" stroke=\"white\" />\n  </svg>),\n  CODE: (<svg width=\"64\" height=\"64\" viewBox=\"0 0 64 64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <rect width=\"64\" height=\"64\" rx=\"24\" fill=\"#323232\" />\n    <line x1=\"21\" y1=\"37\" x2=\"33\" y2=\"37\" stroke=\"#F26C4F\" strokeWidth=\"2\" />\n    <path d=\"M38 26L42.7023 32.4721\" stroke=\"#F26C4F\" strokeWidth=\"2\" />\n    <line x1=\"37.2929\" y1=\"36.9498\" x2=\"42.9497\" y2=\"31.2929\" stroke=\"#F26C4F\" strokeWidth=\"2\" />\n  </svg>),\n  BACKEND: (<svg width=\"64\" height=\"64\" viewBox=\"0 0 64 64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <rect width=\"64\" height=\"64\" rx=\"24\" fill=\"#323232\" />\n    <path d=\"M39.6 27.9999H21.6C20.9384 27.9999 20.4 27.4615 20.4 26.7999V23.5999C20.4 22.9383 20.9384 22.3999 21.6 22.3999H39.6C40.2616 22.3999 40.8 22.9383 40.8 23.5999V26.7999C40.8 27.4615 40.2616 27.9999 39.6 27.9999ZM21.6 23.1999C21.3792 23.1999 21.2 23.3795 21.2 23.5999V26.7999C21.2 27.0203 21.3792 27.1999 21.6 27.1999H39.6C39.8208 27.1999 40 27.0203 40 26.7999V23.5999C40 23.3795 39.8208 23.1999 39.6 23.1999H21.6Z\" fill=\"#F26C4F\" />\n    <path d=\"M23.2 24.7998H22.4V25.5998H23.2V24.7998Z\" fill=\"#F26C4F\" />\n    <path d=\"M24.8 24.7998H24V25.5998H24.8V24.7998Z\" fill=\"#F26C4F\" />\n    <path d=\"M26.4 24.7998H25.6V25.5998H26.4V24.7998Z\" fill=\"#F26C4F\" />\n    <path d=\"M39.6 34.3999H21.6C20.9384 34.3999 20.4 33.8615 20.4 33.1999V29.9999C20.4 29.3383 20.9384 28.7999 21.6 28.7999H39.6C40.2616 28.7999 40.8 29.3383 40.8 29.9999V33.1999C40.8 33.8615 40.2616 34.3999 39.6 34.3999ZM21.6 29.5999C21.3792 29.5999 21.2 29.7795 21.2 29.9999V33.1999C21.2 33.4203 21.3792 33.5999 21.6 33.5999H39.6C39.8208 33.5999 40 33.4203 40 33.1999V29.9999C40 29.7795 39.8208 29.5999 39.6 29.5999H21.6Z\" fill=\"#F26C4F\" />\n    <path d=\"M23.2 31.1998H22.4V31.9998H23.2V31.1998Z\" fill=\"#F26C4F\" />\n    <path d=\"M24.8 31.1998H24V31.9998H24.8V31.1998Z\" fill=\"#F26C4F\" />\n    <path d=\"M26.4 31.1998H25.6V31.9998H26.4V31.1998Z\" fill=\"#F26C4F\" />\n    <path d=\"M39.6 40.8001H21.6C20.9384 40.8001 20.4 40.2617 20.4 39.6001V36.4001C20.4 35.7385 20.9384 35.2001 21.6 35.2001H39.6C40.2616 35.2001 40.8 35.7385 40.8 36.4001V39.6001C40.8 40.2617 40.2616 40.8001 39.6 40.8001ZM21.6 36.0001C21.3792 36.0001 21.2 36.1797 21.2 36.4001V39.6001C21.2 39.8205 21.3792 40.0001 21.6 40.0001H39.6C39.8208 40.0001 40 39.8205 40 39.6001V36.4001C40 36.1797 39.8208 36.0001 39.6 36.0001H21.6Z\" fill=\"#F26C4F\" />\n    <path d=\"M23.2 37.6H22.4V38.4H23.2V37.6Z\" fill=\"#F26C4F\" />\n    <path d=\"M24.8 37.6H24V38.4H24.8V37.6Z\" fill=\"#F26C4F\" />\n    <path d=\"M26.4 37.6H25.6V38.4H26.4V37.6Z\" fill=\"#F26C4F\" />\n    <path d=\"M43.6 19.6001H42.8V43.2001H43.6V19.6001Z\" fill=\"#F26C4F\" />\n    <path d=\"M43.2 24.7999H40.4V25.5999H43.2V24.7999Z\" fill=\"#F26C4F\" />\n    <path d=\"M43.2 31.2001H40.4V32.0001H43.2V31.2001Z\" fill=\"#F26C4F\" />\n    <path d=\"M43.2 37.6001H40.4V38.4001H43.2V37.6001Z\" fill=\"#F26C4F\" />\n    <path d=\"M43.2 26.4C42.5384 26.4 42 25.8616 42 25.2C42 24.5384 42.5384 24 43.2 24C43.8616 24 44.4 24.5384 44.4 25.2C44.4 25.8616 43.8616 26.4 43.2 26.4ZM43.2 24.8C42.9792 24.8 42.8 24.9796 42.8 25.2C42.8 25.4204 42.9792 25.6 43.2 25.6C43.4208 25.6 43.6 25.4204 43.6 25.2C43.6 24.9796 43.4208 24.8 43.2 24.8Z\" fill=\"#F26C4F\" />\n    <path d=\"M43.2 32.7999C42.5384 32.7999 42 32.2615 42 31.5999C42 30.9383 42.5384 30.3999 43.2 30.3999C43.8616 30.3999 44.4 30.9383 44.4 31.5999C44.4 32.2615 43.8616 32.7999 43.2 32.7999ZM43.2 31.1999C42.9792 31.1999 42.8 31.3795 42.8 31.5999C42.8 31.8203 42.9792 31.9999 43.2 31.9999C43.4208 31.9999 43.6 31.8203 43.6 31.5999C43.6 31.3795 43.4208 31.1999 43.2 31.1999Z\" fill=\"#F26C4F\" />\n    <path d=\"M43.2 39.1999C42.5384 39.1999 42 38.6615 42 37.9999C42 37.3383 42.5384 36.7999 43.2 36.7999C43.8616 36.7999 44.4 37.3383 44.4 37.9999C44.4 38.6615 43.8616 39.1999 43.2 39.1999ZM43.2 37.5999C42.9792 37.5999 42.8 37.7795 42.8 37.9999C42.8 38.2203 42.9792 38.3999 43.2 38.3999C43.4208 38.3999 43.6 38.2203 43.6 37.9999C43.6 37.7795 43.4208 37.5999 43.2 37.5999Z\" fill=\"#F26C4F\" />\n  </svg>),\n  MOBILE_APP: (<svg width=\"64\" height=\"64\" viewBox=\"0 0 64 64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <rect width=\"64\" height=\"64\" rx=\"24\" fill=\"#323232\" />\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M23.68 18.5627C23.68 17.3241 24.6834 16.3199 25.9198 16.3199H38.0802C39.3172 16.3199 40.32 17.3234 40.32 18.5627V45.4372C40.32 46.6758 39.3166 47.6799 38.0802 47.6799H25.9198C24.6828 47.6799 23.68 46.6765 23.68 45.4372V18.5627ZM24.64 18.5591V45.4408C24.64 46.1451 25.2133 46.7199 25.9205 46.7199H38.0794C38.7875 46.7199 39.36 46.1472 39.36 45.4408V18.5591C39.36 17.8548 38.7875 17.2799 38.0813 17.2799H35.8408C35.6658 17.2799 35.4461 17.4031 35.355 17.555L34.725 18.6049C34.6353 18.7544 34.4166 18.8799 34.2397 18.8799H29.7603C29.5823 18.8799 29.3661 18.7568 29.275 18.6049L28.645 17.555C28.5553 17.4055 28.3364 17.2799 28.1592 17.2799H25.9187C25.2149 17.2799 24.64 17.8527 24.64 18.5591Z\" fill=\"#F26C4F\" />\n  </svg>),\n  FE_CODE: (<svg width=\"64\" height=\"64\" viewBox=\"0 0 64 64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <rect width=\"64\" height=\"64\" rx=\"24\" fill=\"#323232\" />\n    <path d=\"M38.88 39.264L45.728 32L38.88 24.736L38.432 25.184L44.864 32L38.432 38.816L38.88 39.264Z\" fill=\"#F26C4F\" />\n    <path d=\"M25.12 24.736L18.272 32L25.12 39.264L25.568 38.816L19.136 32L25.568 25.184L25.12 24.736Z\" fill=\"#F26C4F\" />\n    <path d=\"M34.5374 20.2543L28.8608 43.5404L29.4826 43.692L35.1592 20.4059L34.5374 20.2543Z\" fill=\"#F26C4F\" />\n  </svg>),\n  LINKED_IN: (<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M5 3C3.89453 3 3 3.89453 3 5V19C3 20.1055 3.89453 21 5 21H19C20.1055 21 21 20.1055 21 19V5C21 3.89453 20.1055 3 19 3H5ZM5 5H19V19H5V5ZM7.78125 6.31641C6.92188 6.31641 6.41016 6.83203 6.41016 7.51953C6.41016 8.20312 6.92188 8.71875 7.69531 8.71875C8.55078 8.71875 9.06641 8.20312 9.06641 7.51953C9.06641 6.83203 8.55078 6.31641 7.78125 6.31641ZM6.47656 10V17H9V10H6.47656ZM11.082 10V17H13.6055V13.1758C13.6055 12.0352 14.418 11.8711 14.6602 11.8711C14.9063 11.8711 15.5586 12.1172 15.5586 13.1758V17H18V13.1758C18 10.9766 17.0234 10 15.8047 10C14.582 10 13.9297 10.4062 13.6055 10.9766V10H11.082Z\" fill=\"#F2714F\" />\n  </svg>),\n  FACEBOOK: (<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M10 0C4.48828 0 0 4.48828 0 10C0 15.5117 4.48828 20 10 20C15.5117 20 20 15.5117 20 10C20 4.48828 15.5117 0 10 0ZM10 2C14.4297 2 18 5.57031 18 10C18 14.0156 15.0664 17.3125 11.2188 17.8984V12.3828H13.5469L13.9102 10.0195H11.2188V8.72656C11.2188 7.74219 11.5391 6.87109 12.457 6.87109H13.9336V4.80469C13.6758 4.77344 13.125 4.69531 12.0898 4.69531C9.92578 4.69531 8.65234 5.83984 8.65234 8.44531V10.0195H6.42578V12.3828H8.65234V17.8789C4.87109 17.2422 2 13.9688 2 10C2 5.57031 5.57031 2 10 2Z\" fill=\"#F2714F\" />\n  </svg>),\n  INSTAGRAM: (<svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M5 0C2.24219 0 0 2.24219 0 5V13C0 15.7578 2.24219 18 5 18H13C15.7578 18 18 15.7578 18 13V5C18 2.24219 15.7578 0 13 0H5ZM5 2H13C14.6523 2 16 3.34766 16 5V13C16 14.6523 14.6523 16 13 16H5C3.34766 16 2 14.6523 2 13V5C2 3.34766 3.34766 2 5 2ZM14 3C13.4492 3 13 3.44922 13 4C13 4.55078 13.4492 5 14 5C14.5508 5 15 4.55078 15 4C15 3.44922 14.5508 3 14 3ZM9 4C6.24219 4 4 6.24219 4 9C4 11.7578 6.24219 14 9 14C11.7578 14 14 11.7578 14 9C14 6.24219 11.7578 4 9 4ZM9 6C10.6523 6 12 7.34766 12 9C12 10.6523 10.6523 12 9 12C7.34766 12 6 10.6523 6 9C6 7.34766 7.34766 6 9 6Z\" fill=\"#F2714F\" />\n  </svg>),\n  TWITTER: (<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clipPath=\"url(#clip0)\">\n      <path d=\"M16.425 2.625C13.5544 2.625 11.22 4.95937 11.22 7.83C11.22 8.0025 11.2631 8.17125 11.28 8.34C7.73062 8.00062 4.59187 6.29063 2.45999 3.675C2.36062 3.54937 2.20687 3.48187 2.04562 3.49313C1.88624 3.50437 1.74374 3.59625 1.66499 3.735C1.21687 4.50563 0.959993 5.3925 0.959993 6.345C0.959993 7.49813 1.37249 8.55375 2.00999 9.42C1.88624 9.36562 1.75124 9.33562 1.63499 9.27C1.48687 9.19125 1.30874 9.195 1.16437 9.28125C1.01999 9.3675 0.931867 9.52312 0.929993 9.69V9.75C0.929993 11.5181 1.84499 13.0537 3.19499 13.995C3.17999 13.9931 3.16499 13.9987 3.14999 13.995C2.98499 13.9669 2.81812 14.025 2.70749 14.1506C2.59687 14.2762 2.56124 14.4506 2.60999 14.61C3.14624 16.2769 4.51499 17.55 6.20999 18.015C4.85999 18.8175 3.29437 19.29 1.60499 19.29C1.23937 19.29 0.888743 19.2712 0.539993 19.23C0.314993 19.2 0.0993674 19.3312 0.0243676 19.545C-0.0525074 19.7587 0.0318676 19.9969 0.224993 20.115C2.39062 21.5044 4.96124 22.32 7.72499 22.32C12.2044 22.32 15.7181 20.4487 18.075 17.775C20.4319 15.1012 21.66 11.6288 21.66 8.385C21.66 8.24812 21.6487 8.115 21.645 7.98C22.5244 7.30687 23.31 6.5175 23.925 5.595C24.0469 5.41687 24.0337 5.17875 23.8931 5.01375C23.7544 4.84875 23.52 4.79813 23.325 4.89C23.0775 5.00063 22.7887 5.01187 22.53 5.1C22.8712 4.64437 23.1637 4.15313 23.34 3.6C23.4 3.41063 23.3344 3.2025 23.1787 3.07875C23.0231 2.95687 22.8056 2.94187 22.635 3.045C21.8156 3.53063 20.9081 3.87187 19.95 4.08C19.02 3.21 17.7956 2.625 16.425 2.625ZM16.425 3.585C17.6494 3.585 18.7556 4.10813 19.53 4.935C19.6462 5.055 19.8169 5.10563 19.98 5.07C20.6062 4.94625 21.2006 4.76437 21.78 4.53C21.4462 4.98 21.0337 5.36437 20.55 5.655C20.3306 5.76187 20.2275 6.015 20.3081 6.24562C20.3869 6.47437 20.6269 6.6075 20.865 6.555C21.345 6.49687 21.7725 6.30187 22.23 6.18C21.8194 6.62437 21.3694 7.02563 20.88 7.38C20.7469 7.4775 20.6737 7.635 20.685 7.8C20.6925 7.995 20.7 8.18812 20.7 8.385C20.7 11.385 19.5487 14.6419 17.355 17.13C15.1612 19.6181 11.94 21.36 7.72499 21.36C5.81062 21.36 4.00312 20.9362 2.36999 20.19C4.39499 20.0344 6.26249 19.3181 7.76999 18.135C7.92749 18.0094 7.98937 17.7994 7.92562 17.6081C7.86187 17.4169 7.68562 17.2856 7.48499 17.28C5.90249 17.2519 4.57687 16.3312 3.86999 15.03C3.89624 15.03 3.91874 15.03 3.94499 15.03C4.41937 15.03 4.88812 14.97 5.32499 14.85C5.53499 14.7881 5.67937 14.5931 5.67187 14.3737C5.66437 14.1544 5.50874 13.9669 5.29499 13.92C3.58687 13.575 2.30624 12.1838 2.00999 10.455C2.49374 10.6219 2.98874 10.7531 3.52499 10.77C3.74437 10.7831 3.94312 10.6462 4.01062 10.4381C4.07812 10.23 3.99562 10.0013 3.80999 9.885C2.66999 9.12187 1.91999 7.8225 1.91999 6.345C1.91999 5.7975 2.06249 5.295 2.24999 4.815C4.64999 7.44937 8.00999 9.19875 11.805 9.39C11.955 9.3975 12.1012 9.33562 12.1987 9.22125C12.2962 9.105 12.3337 8.95125 12.3 8.805C12.2269 8.49375 12.18 8.16375 12.18 7.83C12.18 5.47875 14.0737 3.585 16.425 3.585Z\" fill=\"#F26C4F\" />\n    </g>\n    <defs>\n      <clipPath id=\"clip0\">\n        <rect width=\"24\" height=\"24\" fill=\"white\" />\n      </clipPath>\n    </defs>\n  </svg>),\n  GITHUB: (<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M10.9004 2.0996C6.30078 2.5996 2.59961 6.30077 2.09961 10.8008C1.59961 15.5 4.30078 19.6992 8.40039 21.3008C8.69922 21.4004 9 21.1992 9 20.8008V19.1992C9 19.1992 8.59961 19.3008 8.09961 19.3008C6.69922 19.3008 6.09961 18.0996 6 17.4004C5.90039 17 5.69922 16.6992 5.40039 16.4004C5.09961 16.3008 5 16.3008 5 16.1992C5 16 5.30078 16 5.40039 16C6 16 6.5 16.6992 6.69922 17C7.19922 17.8008 7.80078 18 8.09961 18C8.5 18 8.80078 17.9004 9 17.8008C9.09961 17.0996 9.40039 16.4004 10 16C7.69922 15.5 6 14.1992 6 12C6 10.9004 6.5 9.80077 7.19922 8.99999C7.09961 8.80077 7 8.30077 7 7.5996C7 7.19921 7 6.5996 7.30078 5.99999C7.30078 5.99999 8.69922 5.99999 10.0996 7.30077C10.5996 7.0996 11.3008 6.99999 12 6.99999C12.6992 6.99999 13.4004 7.0996 14 7.30077C15.3008 5.99999 16.8008 5.99999 16.8008 5.99999C17 6.5996 17 7.19921 17 7.5996C17 8.40038 16.9004 8.80077 16.8008 8.99999C17.5 9.80077 18 10.8008 18 12C18 14.1992 16.3008 15.5 14 16C14.5996 16.5 15 17.4004 15 18.3008V20.9004C15 21.1992 15.3008 21.5 15.6992 21.4004C19.4004 19.9004 22 16.3008 22 12.0996C22 6.0996 16.9004 1.40038 10.9004 2.0996Z\" fill=\"#F26C4F\"/>\n  </svg>),\n  MOBILE_MENU: (<svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M5.44 6.71997C5.35513 6.71998 5.27374 6.7537 5.21373 6.81371C5.15372 6.87372 5.12 6.9551 5.12 7.03997V10.24C5.12 10.3248 5.15372 10.4062 5.21373 10.4662C5.27374 10.5262 5.35513 10.56 5.44 10.56H26.56C26.6449 10.56 26.7262 10.5262 26.7863 10.4662C26.8463 10.4062 26.88 10.3248 26.88 10.24V7.03997C26.88 6.9551 26.8463 6.87372 26.7863 6.81371C26.7262 6.7537 26.6449 6.71998 26.56 6.71997H5.44ZM5.76 7.35997H26.24V9.91997H5.76V9.27997H23.52C23.5412 9.28027 23.5622 9.27635 23.5819 9.26845C23.6016 9.26054 23.6195 9.2488 23.6346 9.23392C23.6497 9.21903 23.6617 9.20129 23.6699 9.18173C23.6781 9.16217 23.6823 9.14117 23.6823 9.11997C23.6823 9.09877 23.6781 9.07777 23.6699 9.05821C23.6617 9.03865 23.6497 9.02091 23.6346 9.00603C23.6195 8.99114 23.6016 8.9794 23.5819 8.97149C23.5622 8.96359 23.5412 8.95967 23.52 8.95997H5.76V7.35997ZM24.48 8.95997C24.4588 8.95967 24.4377 8.96359 24.4181 8.97149C24.3984 8.9794 24.3805 8.99114 24.3654 9.00603C24.3503 9.02091 24.3383 9.03865 24.3301 9.05821C24.3219 9.07777 24.3177 9.09877 24.3177 9.11997C24.3177 9.14117 24.3219 9.16217 24.3301 9.18173C24.3383 9.20129 24.3503 9.21903 24.3654 9.23392C24.3805 9.2488 24.3984 9.26054 24.4181 9.26845C24.4377 9.27635 24.4588 9.28027 24.48 9.27997H25.12C25.1412 9.28027 25.1622 9.27635 25.1819 9.26845C25.2016 9.26054 25.2195 9.2488 25.2346 9.23392C25.2497 9.21903 25.2617 9.20129 25.2699 9.18173C25.2781 9.16217 25.2823 9.14117 25.2823 9.11997C25.2823 9.09877 25.2781 9.07777 25.2699 9.05821C25.2617 9.03865 25.2497 9.02091 25.2346 9.00603C25.2195 8.99114 25.2016 8.9794 25.1819 8.97149C25.1622 8.96359 25.1412 8.95967 25.12 8.95997H24.48ZM5.44 14.08C5.35513 14.08 5.27374 14.1137 5.21373 14.1737C5.15372 14.2337 5.12 14.3151 5.12 14.4V17.6C5.12 17.6848 5.15372 17.7662 5.21373 17.8262C5.27374 17.8862 5.35513 17.92 5.44 17.92H26.56C26.6449 17.92 26.7262 17.8862 26.7863 17.8262C26.8463 17.7662 26.88 17.6848 26.88 17.6V14.4C26.88 14.3151 26.8463 14.2337 26.7863 14.1737C26.7262 14.1137 26.6449 14.08 26.56 14.08H5.44ZM5.76 14.72H26.24V17.28H5.76V14.72ZM7.19999 16.32C7.17879 16.3197 7.15774 16.3236 7.13807 16.3315C7.11839 16.3394 7.10049 16.3511 7.08539 16.366C7.07029 16.3809 7.0583 16.3987 7.05011 16.4182C7.04193 16.4378 7.03772 16.4588 7.03772 16.48C7.03772 16.5012 7.04193 16.5222 7.05011 16.5417C7.0583 16.5613 7.07029 16.579 7.08539 16.5939C7.10049 16.6088 7.11839 16.6205 7.13807 16.6284C7.15774 16.6364 7.17879 16.6403 7.19999 16.64H21.6C21.6212 16.6403 21.6422 16.6364 21.6619 16.6284C21.6816 16.6205 21.6995 16.6088 21.7146 16.5939C21.7297 16.579 21.7417 16.5613 21.7499 16.5417C21.7581 16.5222 21.7623 16.5012 21.7623 16.48C21.7623 16.4588 21.7581 16.4378 21.7499 16.4182C21.7417 16.3987 21.7297 16.3809 21.7146 16.366C21.6995 16.3511 21.6816 16.3394 21.6619 16.3315C21.6422 16.3236 21.6212 16.3197 21.6 16.32H7.19999ZM22.56 16.32C22.5388 16.3197 22.5177 16.3236 22.4981 16.3315C22.4784 16.3394 22.4605 16.3511 22.4454 16.366C22.4303 16.3809 22.4183 16.3987 22.4101 16.4182C22.4019 16.4378 22.3977 16.4588 22.3977 16.48C22.3977 16.5012 22.4019 16.5222 22.4101 16.5417C22.4183 16.5613 22.4303 16.579 22.4454 16.5939C22.4605 16.6088 22.4784 16.6205 22.4981 16.6284C22.5177 16.6364 22.5388 16.6403 22.56 16.64H23.52C23.5412 16.6403 23.5622 16.6364 23.5819 16.6284C23.6016 16.6205 23.6195 16.6088 23.6346 16.5939C23.6497 16.579 23.6617 16.5613 23.6699 16.5417C23.6781 16.5222 23.6823 16.5012 23.6823 16.48C23.6823 16.4588 23.6781 16.4378 23.6699 16.4182C23.6617 16.3987 23.6497 16.3809 23.6346 16.366C23.6195 16.3511 23.6016 16.3394 23.5819 16.3315C23.5622 16.3236 23.5412 16.3197 23.52 16.32H22.56ZM24.48 16.32C24.4588 16.3197 24.4377 16.3236 24.4181 16.3315C24.3984 16.3394 24.3805 16.3511 24.3654 16.366C24.3503 16.3809 24.3383 16.3987 24.3301 16.4182C24.3219 16.4378 24.3177 16.4588 24.3177 16.48C24.3177 16.5012 24.3219 16.5222 24.3301 16.5417C24.3383 16.5613 24.3503 16.579 24.3654 16.5939C24.3805 16.6088 24.3984 16.6205 24.4181 16.6284C24.4377 16.6364 24.4588 16.6403 24.48 16.64H25.12C25.1412 16.6403 25.1622 16.6364 25.1819 16.6284C25.2016 16.6205 25.2195 16.6088 25.2346 16.5939C25.2497 16.579 25.2617 16.5613 25.2699 16.5417C25.2781 16.5222 25.2823 16.5012 25.2823 16.48C25.2823 16.4588 25.2781 16.4378 25.2699 16.4182C25.2617 16.3987 25.2497 16.3809 25.2346 16.366C25.2195 16.3511 25.2016 16.3394 25.1819 16.3315C25.1622 16.3236 25.1412 16.3197 25.12 16.32H24.48ZM5.44 21.44C5.35513 21.44 5.27374 21.4737 5.21373 21.5337C5.15372 21.5937 5.12 21.6751 5.12 21.76V24.96C5.12 25.0448 5.15372 25.1262 5.21373 25.1862C5.27374 25.2462 5.35513 25.28 5.44 25.28H26.56C26.6449 25.28 26.7262 25.2462 26.7863 25.1862C26.8463 25.1262 26.88 25.0448 26.88 24.96V21.76C26.88 21.6751 26.8463 21.5937 26.7863 21.5337C26.7262 21.4737 26.6449 21.44 26.56 21.44H5.44ZM5.76 22.08H26.24V23.68H8.47999C8.45879 23.6797 8.43774 23.6836 8.41807 23.6915C8.39839 23.6994 8.38049 23.7111 8.36539 23.726C8.35029 23.7409 8.3383 23.7587 8.33011 23.7782C8.32193 23.7978 8.31772 23.8188 8.31772 23.84C8.31772 23.8612 8.32193 23.8822 8.33011 23.9017C8.3383 23.9213 8.35029 23.939 8.36539 23.9539C8.38049 23.9688 8.39839 23.9805 8.41807 23.9884C8.43774 23.9964 8.45879 24.0003 8.47999 24H26.24V24.64H5.76V22.08ZM6.87999 23.68C6.85879 23.6797 6.83774 23.6836 6.81807 23.6915C6.79839 23.6994 6.78049 23.7111 6.76539 23.726C6.75029 23.7409 6.7383 23.7587 6.73011 23.7782C6.72193 23.7978 6.71772 23.8188 6.71772 23.84C6.71772 23.8612 6.72193 23.8822 6.73011 23.9017C6.7383 23.9213 6.75029 23.939 6.76539 23.9539C6.78049 23.9688 6.79839 23.9805 6.81807 23.9884C6.83774 23.9964 6.85879 24.0003 6.87999 24H7.51999C7.5412 24.0003 7.56225 23.9964 7.58192 23.9884C7.6016 23.9805 7.6195 23.9688 7.6346 23.9539C7.6497 23.939 7.66169 23.9213 7.66988 23.9017C7.67806 23.8822 7.68227 23.8612 7.68227 23.84C7.68227 23.8188 7.67806 23.7978 7.66988 23.7782C7.66169 23.7587 7.6497 23.7409 7.6346 23.726C7.6195 23.7111 7.6016 23.6994 7.58192 23.6915C7.56225 23.6836 7.5412 23.6797 7.51999 23.68H6.87999Z\" fill=\"#F26C4F\" />\n  </svg>),\n  CLOSE_ICON: (<svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M24 9.6L22.4 8L16 14.4L9.6 8L8 9.6L14.4 16L8 22.4L9.6 24L16 17.6L22.4 24L24 22.4L17.6 16L24 9.6Z\" fill=\"#F26C4F\" />\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M24 9.6L22.4 8L16 14.4L9.6 8L8 9.6L14.4 16L8 22.4L9.6 24L16 17.6L22.4 24L24 22.4L17.6 16L24 9.6Z\" fill=\"#F26C4F\" />\n  </svg>)\n};\n\nexport default Icons;","import React, { useState, useEffect } from 'react';\nimport '../styles/components/navigation.scss';\nimport Icons from '../assets/svgs/icons';\nimport { Link } from 'react-router-dom';\n\nconst NavigationBar = () => {\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [hasScrolled, setHasScrolled] = useState(false);\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  });\n\n  const handleScroll = () => {\n    if (window.pageYOffset > 100) {\n      return setHasScrolled(true);\n    }\n    return setHasScrolled(false);\n  };\n\n  return (\n    <div className={`navbar-wrap ${hasScrolled && 'scrolled'}`}>\n      <div className=\"desk-wrap\">\n        <div className='left-panel'>\n          <Link to=\"/\">{Icons.LOGO}</Link>\n        </div>\n        <div className='right-panel'>\n          <div className={`menu-items-wrap ${isMobileMenuOpen && 'mobile-menu-open'}`}>\n            <Link to=\"/about\">\n              <div className=\"menu-item-wrap\">\n                <button className='hch-btn-primary'>About</button>\n              </div>\n            </Link>\n            <Link to=\"/projects\">\n              <button className='hch-btn-primary'>Projects</button>\n            </Link>\n            <div className=\"menu-item-wrap\">\n              <button className='hch-btn-primary'>Contact</button>\n            </div>\n          </div>\n          <div className=\"hamburger-wrap\" onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}>\n            {isMobileMenuOpen ? Icons.CLOSE_ICON : Icons.MOBILE_MENU}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NavigationBar;","import React from 'react';\n\nimport '../styles/components/social.scss';\n\nimport Icons from '../assets/svgs/icons';\n\nconst SocialLinks = () => {\n  return (<div className=\"social-wrap\">\n    <div className=\"icon-wrap\">\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://facebook.com/himanshu.chanan\">\n        {Icons.FACEBOOK}\n      </a>\n    </div>\n    <div className=\"icon-wrap\">\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://instagram.com/hch2904\">\n        {Icons.INSTAGRAM}\n      </a>\n    </div>\n    <div className=\"icon-wrap\">\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/himanshu-chanan/\">\n        {Icons.LINKED_IN}\n      </a>\n    </div>\n    <div className=\"icon-wrap\">\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/hch2904\">\n        {Icons.TWITTER}\n      </a>\n    </div>\n    <div className=\"icon-wrap\">\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/hch2904\">\n        {Icons.GITHUB}\n      </a>\n    </div>\n  </div>);\n};\n\nexport default SocialLinks;","import React, { useEffect } from 'react';\n\n// import myImg from '../assets/images/my-hero-img.png';\nimport bgVideo from '../assets/bg-video.mp4';\n\nimport '../styles/components/hero.scss';\nimport SocialLinks from './social';\nimport Icons from '../assets/svgs/icons';\n\nconst Hero = () => {\n\n  useEffect(() => {\n    const namePaths = document.querySelectorAll('.name-wrap svg path');\n    const pathLengths = [];\n    for (let i = 0; i < namePaths.length; i++) {\n      const path = namePaths[i];\n      const pathLength = path.getTotalLength();\n      path.style.strokeDasharray = pathLength;\n      path.style.strokeDashoffset = pathLength;\n      path.style.animation = 'name-move-fill 2s ease forwards 0.6s';\n      pathLengths.push(namePaths[i].getTotalLength());\n    }\n  });\n\n  return (\n    <div className=\"hero-wrap\">\n      <video className='video-wrap' autoPlay muted loop id=\"myVideo\">\n        <source src={bgVideo} type=\"video/mp4\" />\n      </video>\n      <div className=\"_main-content-wrap\">\n        <div className=\"img-name-wrap\">\n          <div className='name-wrap'>\n            <p>Hey there! <span className='emoji-wrap' role=\"img\" aria-label=\"hello-emoji\">&#128075;&#127996;</span> I am </p>\n            <div className=\"fname\">{Icons.HIMANSHU}</div>\n            <div className=\"lname\">{Icons.CHANAN}</div>\n            <hr className='fake-border' />\n            <SocialLinks />\n          </div>\n        </div>\n        <div className=\"my-info-wrap\">\n          <h1 className=\"role-name\">\n            Software Developer\n          </h1>\n          <h1 className='location-info-1'>Ottawa, Canada</h1>\n          {/* <h1 className='location-info-2'>Canada</h1> */}\n          <p className='some-info-block'>I&apos;m passionate for software development and keen to learn new technologies and frameworks. I strive to develop websites that standout and are visually appealing. I have had a varied experience in both frontend and backend development. </p>\n          <p className='contact-email'>\n            <a href=\"mailto:himanshu2904@outlook.com\">himanshu2904@outlok.com</a>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Hero;","import React from 'react';\n\nimport '../styles/components/whatIdo.scss';\nimport Icons from '../assets/svgs/icons';\n\nconst WhatIdo = () => {\n  return (\n    <div className='about-me-wrap'>\n      <div className=\"section-heading\">\n        <h3 className=\"__heading\">What I Do?</h3>\n        <span className='__fake-border'/>\n      </div>\n      <div className=\"main-content-wrap\">\n        <div className=\"work-type-wrap\">\n          <div className=\"icon-wrap\">\n            {Icons.FE_CODE}\n          </div>\n          <div className=\"heading-wrap\">\n            <h2>Frontend</h2>\n          </div>\n          <p className='info-text'>I am profficient in front-end technologies like React. Using reactjs I have developed many performant apps for web.</p>\n        </div>\n        <div className=\"work-type-wrap\">\n          <div className=\"icon-wrap\">\n            {Icons.BACKEND}\n          </div>\n          <div className=\"heading-wrap\">\n            <h2>Backend</h2>\n          </div>\n          <p className=\"info-text\">Working on microservice architecture has helped me strengthen my skills as a backend developer</p>\n        </div>\n        <div className=\"work-type-wrap\">\n          <div className=\"icon-wrap\">\n            {Icons.MOBILE_APP}\n          </div>\n          <div className=\"heading-wrap\">\n            <h2>Mobile App</h2>\n          </div>\n          <p className=\"info-text\">Although a newbie, in mobile development, I have overall understanding in cross platform app development frameworks such as React Native and Flutter.</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WhatIdo;","import React from 'react';\n\nimport '../styles/components/aboutMe.scss';\n\nconst joiningDate = new Date('2015-11-27');\nconst yearsOfExp = new Date().getUTCFullYear() - joiningDate.getUTCFullYear();\n\nconst AboutMe = () => {\n  return (\n    <div className=\"about-me-wrap-full\">\n      <div className=\"about-me-wrap-960 generic-960-wrap\">\n        <div className=\"about-me-heading-wrap\">\n          <h4 className=\"__heading\">About Me</h4>\n          <span className='__fake-border'></span>\n        </div>\n        <div className=\"__content-wrap\">\n          <div className=\"__left-panel\">\n            <h3 className=\"__heading-text\">I am a software engineer by profession, I did my graduation from National Institute of Technology Delhi, India. </h3>\n            <p className=\"__subheading-text\">Through five years of my career, I have had opportunity to explore the world of software development with languages such as Javascript,Java, HTML, CSS, SQL and many more. I have closely worked with clients across countries which has helped me understand various software development lifecycles (Agile, waterfall etc) and their pros and cons, which has made me a good coder and a better developer.</p>\n            <div className=\"experience-wrap\">\n              <span className=\"__noxp\">{yearsOfExp}</span>\n              <div className=\"__text-wrap\">\n                <span>Years Of</span>\n                <div>Experience</div>\n              </div>\n            </div>\n          </div>\n          <div className=\"__right-panel\">\n            <h3 className='__heading-text'>Any queries or discussion?</h3>\n            <p className=\"__subheading-text\">Let&apos;s talk</p>\n            <h4 className=\"__email\">\n              <a href=\"mailto:himanshu2904@outlook.com\">himanshu2904@outlook.com</a>\n            </h4>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AboutMe;","import React from 'react';\nimport Icons from '../assets/svgs/icons';\n\nimport '../styles/components/footer.scss';\nimport SocialLinks from './social';\n\nimport myPhoto from '../assets/images/hch.jpg';\n\nconst Footer = (props) => {\n  const { bgColor } = props;\n  return (\n    <div className=\"footer-wrap\" style={bgColor ? { backgroundColor: bgColor } : {}}>\n      <div className=\"__content-wrap generic-960-wrap\">\n        <div className=\"__left-panel-wrap\">\n          <h3>Himanshu Chanan</h3>\n          <h4>Software Developer</h4>\n          <div className=\"contact-info-wrap\">\n            <p>Lets get in touch</p>\n            <p><a className='__email' href=\"mailto:himanshu2904@outlook.com\">himanshu2904@outook.com </a></p>\n          </div>\n        </div>\n        <div className=\"__right-panel-wrap\">\n          <div className=\"img-wrap\">\n            <img src={myPhoto} alt=\"\" />\n          </div>\n        </div>\n      </div>\n      <div className=\"footer-2-wrap generic-960-wrap\">\n        <span className=\"logo-wrap\">{Icons.LOGO}</span>\n        <p><span className='bold-text'>Thanks for scrolling,</span> thats all folks.</p>\n        <SocialLinks />\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport '../styles/components/projectCard.scss';\n\n/**\n * \n * @param {*} props \n * @param {String} props.heading \n * @param {String} props.imgName\n * @param {String} props.role\n * @param {String} props.tech\n * @param {String} props.description\n */\nconst ProjectCard = (props) => {\n  const { heading, imgName, role, tech, description } = props;\n  /* eslint-disable no-undef */\n  const imgSrc = require(`../assets/images/${imgName}`);\n  return (\n    <div className=\"card-container\">\n      <div className=\"img-wrap\">\n        <img src={imgSrc} alt=\"\" />\n      </div>\n      <h3 className=\"project-heading\">{heading}</h3>\n      <p className=\"__role\">{role}</p>\n      <p className=\"__tech\">{tech}</p>\n      <p className=\"__mini-description\">{description}</p>\n    </div>\n  );\n};\n\nexport default ProjectCard;\n","import React from 'react';\n\nimport '../styles/components/projects.scss';\n\nimport Icons from '../assets/svgs/icons';\nimport ProjectCard from './projectCard';\n\nimport projectData from '../db/projects.json';\nimport { Link } from 'react-router-dom';\n\nconst Projects = (props) => {\n  const { max } = props;\n  const data = max ? projectData.slice(0, max) : projectData;\n  return (\n    <div className=\"projects-full-wrap\">\n      <div className=\"project-main-content-wrap generic-960-wrap\">\n        <h3 className='my-projects-headline'>My Recent Projects</h3>\n        <span className='__fake-border'></span>\n        <div className=\"cards-wrap\">\n          {data.map((project) =>\n            <Link key={project.slug} to={`/project/${project.slug}`}>\n              <ProjectCard\n                key={project.heading}\n                heading={project.heading}\n                imgName={project.imgName}\n                role={project.role}\n                tech={project.tech}\n                description={project.description}\n              />\n            </Link>)}\n        </div>\n        <Link to=\"/projects\">\n          <button className=\"explore-more\">\n          Explore More\n            <span className=\"icon-wrap\">\n              {Icons.RIGHT_ARROW}\n            </span>\n          </button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Projects;\n","import React from 'react';\nimport NavigationBar from '../components/navbar';\nimport Hero from '../components/hero';\nimport WhatIdo from '../components/whatIdo';\nimport AboutMe from '../components/aboutMe';\nimport Footer from '../components/footer';\nimport Projects from '../components/projects';\n\nconst HomeScreen = () => {\n  return (<>\n    <NavigationBar />\n    <Hero />\n    <AboutMe />\n    <WhatIdo />\n    <Projects \n      max={3}\n    />\n    <Footer />\n  </>\n  );\n};\n\nexport default HomeScreen;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Footer from '../components/footer';\nimport projects from '../db/projects.json';\nimport ProjectCard from '../components/projectCard';\n\nimport '../styles/screens/projects.scss';\n\nconst Projects = () => {\n  return (\n    <>\n      <div className='project-screen-wrap'>\n        <div className=\"generic-960-wrap main-content-wrap\">\n          <div className='project-header-wrap'>\n            <h2 className='page-header gutter-bottom'>Projects</h2>\n            <h3 className=\"component-header\">My Recent Work</h3>\n            <div className='__fake-border' />\n          </div>\n          <div className='project-card-wrap'>\n            {projects.map((project) =>\n              <Link \n                to={`/project/${project.slug}`}\n                key={project.slug}\n                style={{ textDecoration: 'none' }}\n              >\n                <ProjectCard\n                  key={project.heading}\n                  heading={project.heading}\n                  imgName={project.imgName}\n                  role={project.role}\n                  tech={project.tech}\n                  description={project.description}\n                />\n              </Link>\n            )}\n          </div>\n        </div>\n        <Footer />\n      </div>\n    </>\n  );\n};\n\nexport default Projects;","import React from 'react';\n\nimport '../styles/components/chip.scss';\n\n/**\n * \n * @param {{}} props \n * @param {String} props.title\n */\nconst Chip = (props) => {\n  const { title } = props;\n\n  return (\n    <div className='chip-container'>\n      <p className='chip-title'>\n        {title}\n      </p>\n    </div>\n  );\n\n};\n\nexport default Chip;","import React, { useEffect, useState } from 'react';\nimport '../styles/screens/project.scss';\nimport Chip from '../components/chip';\nimport Footer from '../components/footer';\nimport ReactMarkdown from 'react-markdown';\nimport { Redirect } from 'react-router';\n\n/**\n * \n * @param {*} props\n * @param {} props.details\n * @param {String} details.heading\n * @param {String} details.subHeading\n * @param {String} details.description\n * @param {String} details.text\n * @param {[]} details.stack\n * @param {[]} details.roles\n */\nconst ProjectScreen = (props) => {\n  useEffect(() => {\n    const getMd = async (filename) => {\n      const mdFileModule = await require(`../db/mds/${filename}`);\n      const res = await fetch(mdFileModule);\n      setMd(await res.text());\n    };\n    \n    getMd('live-receipt.md');\n  }, []);\n\n  let [md, setMd] = useState(null);\n\n  if (!props.details) return (<Redirect to=\"/not-found\" />);\n  const { heading, subHeading, description, stack, roles } = props.details;\n\n  return (\n    <div className=\"project-container\">\n      <div className=\"main-content-full-bg\">\n        <div className=\"generic-960-wrap main-content-wrap\">\n          <div className=\"__main-heading-container-wrap\">\n            <h3 className='__main-heading gutter-bottom'>{heading}</h3>\n            <hr className='__fake-border' />\n            <h5 className='__main-subheading'>{subHeading}</h5>\n          </div>\n          <div className=\"description-wrap\">\n            <div className=\"description-left\">\n              <h6 className='component-header'>Description</h6>\n              <p className='component-description'>{description}</p>\n              <div className=\"stack-info-wrap\">\n                <h6 className='component-header'>Stack</h6>\n                <div className=\"stack-wrap\">\n                  {stack && stack.map((name) =>\n                    (<Chip\n                      key={name}\n                      title={name}\n                    />)\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"description-right\">\n              <h6 className='component-header'>Roles</h6>\n              <div className=\"chip-wrap\">\n                {roles && roles.map((name) =>\n                  (<Chip\n                    key={name}\n                    title={name}\n                  />)\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"write-up-full-wrap\">\n        <div className=\"write-up-content-wrap generic-960-wrap\">\n          <ReactMarkdown\n            source={md}\n            renderers={{ root: React.Fragment }}\n          />\n        </div>\n      </div>\n      <Footer bgColor={'#1F1F1F'} />\n    </div>\n  );\n};\n\nexport default ProjectScreen;","import React from 'react';\nimport myPhoto from '../assets/images/hch-avatar.png';\n\nimport WhatIdo from '../components/whatIdo';\nimport AboutMe from '../components/aboutMe';\nimport Footer from '../components/footer';\n\nimport '../styles/screens/about.scss';\n\nconst About = () => {\n  return (<>\n    <div className='about-full-wrap'>\n      <div className='generic-960-wrap __my-photo-wrap'>\n        <div className=\"img-wrap\">\n          <img src={myPhoto} alt=\"\" />\n        </div>\n      </div>\n    </div>\n    <AboutMe />\n    <WhatIdo />\n    <Footer />\n  </>\n  );\n};\n\nexport default About;","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function ScrollToTop () {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nimport HomeScreen from './screens/home';\nimport Projects from './screens/projects';\nimport ProjectScreen from './screens/project';\n\nimport './app.scss';\nimport About from './screens/about';\nimport ScrollToTop from './components/scrollToTop';\nimport projectsDb from './db/projects.json';\nimport NotFound from './screens/notFound';\nimport NavigationBar from './components/navbar';\n\nconst routes = [\n  { path: '/about', name: 'About', Component: About },\n  { path: '/projects', name: 'Projects', Component: Projects },\n  {\n    // eslint-disable-next-line react/display-name\n    path: '/project/:id', name: 'Project', Component: (routerProps) => {\n      const { pathname } = routerProps.location; \n      const hash = pathname.substr(9);\n      return (<ProjectScreen\n        {...routerProps}\n        details={projectsDb.filter(project => project.slug === hash)[0]}\n      />);\n    }\n  },\n  { path: '/', name: 'Home', Component: HomeScreen },\n  { path: '/*', name: 'Not Found', Component: NotFound }\n];\n\nconst AppRoutes = () => {\n  return (\n    <>\n      <NavigationBar />\n      <Route render={(props) => {\n        const { pathname } = props.location;\n        return (\n          <TransitionGroup>\n            <CSSTransition\n              timeout={900}\n              classNames='screen'\n              key={pathname}\n              unmountOnExit\n            >\n              <Switch location={props.location}>\n                {routes.map(({ path, Component }) => (\n                  <Route exact key={path} path={path}>\n                    <div className=\"screen\">\n                      <Component {...props} />\n                    </div>\n                  </Route>\n                ))}\n              </Switch>\n            </CSSTransition>\n          </TransitionGroup>\n        );\n      }} />\n    </>);\n};\n\nfunction App () {\n  return (\n    <>\n      <Router>\n        <Route path=\"/\" component={AppRoutes} />\n        <ScrollToTop />\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Footer from '../components/footer';\n\nimport notFoundImg from '../assets/images/not-found.png';\nimport '../styles/screens/notFound.scss';\n\n\nconst NotFound = () => {\n  return (<>\n    <div className='generic-960-wrap not-found-wrap'>\n      <div className='img-wrap'>\n        <img src={notFoundImg} alt=\"page-not-found\" />\n      </div>\n      <h3 className='page-header'>You Seem Lost!</h3>\n      <Link to=\"/\" style={{ textDecoration: 'none' }}>\n        <h3 className='component-header'>Click here to go back home</h3>\n      </Link>\n    </div>\n    <Footer />\n  </>\n  );\n};\n\nexport default NotFound;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/hch.55b6ed5e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hch-avatar.b1389a4c.png\";","module.exports = __webpack_public_path__ + \"static/media/not-found.e768d422.png\";","module.exports = __webpack_public_path__ + \"static/media/bg-video.17e0dd66.mp4\";","var map = {\n\t\"./hch-avatar.png\": 26,\n\t\"./hch.jpg\": 25,\n\t\"./hero-bg.png\": 64,\n\t\"./medical.png\": 65,\n\t\"./my-hero-img.png\": 66,\n\t\"./not-found.png\": 27,\n\t\"./receipts.png\": 67,\n\t\"./retail-bg.jpg\": 68,\n\t\"./shopping.png\": 69\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 63;","module.exports = __webpack_public_path__ + \"static/media/hero-bg.fd88e2ed.png\";","module.exports = __webpack_public_path__ + \"static/media/medical.86cfefbf.png\";","module.exports = __webpack_public_path__ + \"static/media/my-hero-img.2a44e5ad.png\";","module.exports = __webpack_public_path__ + \"static/media/receipts.51044750.png\";","module.exports = __webpack_public_path__ + \"static/media/retail-bg.d045b75c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/shopping.44169847.png\";"],"sourceRoot":""}